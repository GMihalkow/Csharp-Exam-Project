@using Forum.ViewModels.Message;

<div class="text-center bg-burly text-forum block m-10px">
    <h3 class="m-0">
        <label class="text-forum">Search:</label>
    </h3>
    <form autocomplete="off" action="/" method="post">
        <div class="autocomplete">
            <input id="myInput" class="full-width border-5 border-none" type="text" placeholder="Search for users..." />
        </div>
        <div class="center-button">
            <button id="searchButton" class="m-0 submit-button menu-bg-forum text-white" type="button">Search</button>
        </div>
    </form>
</div>
<h4 class="text-center text-forum bg-burly p-10 m-0">Recent Conversations</h4>
<div class="menu-bg-forum m-0 p-0">
    @foreach (var username in (List<string>)this.ViewData["recentConversations"])
    {
        <button class="m-0 p-10 border-none font-18 recentConversationButton menu-bg-forum text-white full-width" value="@username" type="button">@username</button>
    }
</div>
<h4 class="text-center text-forum bg-burly p-10 m-0">Unread Messages</h4>
<div class="menu-bg-forum m-0 p-0">
    @foreach (var unreadMessage in (List<UnreadMessageViewModel>)this.ViewData["unreadMessages"])
    {
        <button class="m-0 p-10 border-none font-18 recentConversationButton bg-white text-forum full-width" value="@unreadMessage.AuthorName" type="button">@unreadMessage.AuthorName (@unreadMessage.MessagesCount)</button>
    }
</div>


<script src="../js/searchAutocomplete.js"></script>
<script>
/*An array containing all the user names in the db:*/
    var names = [];

    @foreach (var name in (List<string>)this.ViewData["userNames"])
    {
        @: names = names.concat('@name');
    }

    /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
    autocomplete(document.getElementById("myInput"), names);
</script>
<script src="../js/switchChats.js"></script>
<script src="../js/searchForUser.js"></script>